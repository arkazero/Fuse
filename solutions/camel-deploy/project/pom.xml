<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.redhat.training</groupId>
		<artifactId>camel-deploy-solution</artifactId>
		<version>1.0</version>
	</parent>
	<artifactId>camel-deploy-project-solution</artifactId>
	<packaging>bundle</packaging>
	<name>Lab: Deploying a route in a Fuse container on OpenShift</name>
	<description>Lab: Deploying a route in a Fuse container on OpenShift</description>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-project-bom-fuse-karaf</artifactId>
				<version>${fabric8.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spark-rest</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.redhat.training.jb421</groupId>
			<artifactId>camel-deploy-bean-solution</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- testing -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test-spring3</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Karaf features -->
		<dependency>
			<groupId>io.fabric8</groupId>
			<artifactId>fabric8-karaf-features</artifactId>
			<classifier>features</classifier>
			<type>xml</type>
		</dependency>

		<!-- Karaf microcontainer dependencies -->
		<dependency>
			<!-- scope is compile so all features (there is only one) are installed 
				into startup.properties, and the feature repo itself is not added in etc/org.apache.karaf.features.cfg 
				file -->
			<groupId>org.jboss.fuse</groupId>
			<artifactId>fuse-karaf-framework</artifactId>
			<version>${jboss.fuse.bom.version}</version>
			<type>kar</type>
			<!-- no need to download kar dependencies -->
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>
			<!-- plugin goals have to be executed in order -->
			<!-- 1. install the bundle -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>${maven-install-plugin.version}</version>
				<executions>
					<execution>
						<id>default-install</id>
						<goals>
							<goal>install</goal>
						</goals>
						<phase>install</phase>
					</execution>
				</executions>
			</plugin>

			<!-- 2. create karaf assembly -->
			<!-- karaf-maven-plugin creates custom microservice distribution -->
			<plugin>
				<groupId>org.apache.karaf.tooling</groupId>
				<artifactId>karaf-maven-plugin</artifactId>
				<version>${karaf.plugin.version}</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>karaf-assembly</id>
						<goals>
							<goal>assembly</goal>
						</goals>
						<phase>install</phase>
					</execution>
					<execution>
						<id>karaf-archive</id>
						<goals>
							<goal>archive</goal>
						</goals>
						<phase>install</phase>
					</execution>
				</executions>
				<configuration>
					<!-- we are using karaf 2.4.x -->
					<karafVersion>v24</karafVersion>
					<useReferenceUrls>true</useReferenceUrls>
					<archiveTarGz>false</archiveTarGz>
					<includeBuildOutputDirectory>false</includeBuildOutputDirectory>
					<!-- Following is needed for camel-spark-rest to resolve correctly -->
					<javase>1.8</javase>

					<startupFeatures>
						<feature>karaf-framework</feature>
						<feature>shell</feature>
						<feature>jaas</feature>
						<feature>fabric8-karaf-checks</feature>
						<feature>camel-spring</feature>
						<feature>camel-spark-rest</feature>
					</startupFeatures>
					<startupBundles>
						<bundle>mvn:${project.groupId}/${project.artifactId}/${project.version}</bundle>
					</startupBundles>
				</configuration>
			</plugin>

			<!-- 3. Create S2I binary image using FIS 2.0 -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fabric8.maven.plugin.version}</version>
				<executions>
					<execution>
						<id>generate-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>resource</goal>
						</goals>
					</execution>
					<execution>
						<id>build-image</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
